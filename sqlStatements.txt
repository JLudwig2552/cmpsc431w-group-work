CREATE TABLE Users (
	userID INTEGER AUTO_INCREMENT NOT NULL,
	type ENUM("User", "Vendor") NOT NULL,
	name VARCHAR(255) NOT NULL,
	address_streeAddr VARCHAR(255) NOT NULL,
	address_city VARCHAR(255) NOT NULL,
	address_state CHAR(2) NOT NULL,
	address_zip NUMBER(5,0) NOT NULL,
	address_zip_ext NUMBER(4,0),
	birthdate TIMESTAMP NOT NULL,
	email VARCHAR(255) NOT NULL,
	PRIMARY KEY(userID)
	);
	
CREATE TABLE Vendors (
	userID INTEGER NOT NULL,
	type ENUM("Vendor") NOT NULL,
	company_name VARCHAR(255) NOT NULL,
	phone_num NUMBER(11,0) NOT NULL,
	PRIMARY KEY(userID),
	FOREIGN KEY(userID, type) REFERENCES Users(userID, type)
	);
	
CREATE TABLE Ratings (
	seller_userID INTEGER NOT NULL,
	buyer_userID INTEGER NOT NULL,
	timestamp TIMESTAMP NOT NULL,
	itemID INTEGER NOT NULL,
	subject VARCHAR(255) NOT NULL,
	rating TINYINT NOT NULL,
	content VARCHAR(2000) NOT NULL,
	CONSTRAINT star_rating CHECK (rating >= 0 AND rating <=5),
	PRIMARY KEY(seller_userID, buyer_userID, itemID, timestamp),
	FOREIGN KEY(seller_userID, buyer_userID, itemID, timestamp),
	);
	
CREATE TABLE Transactions (
	seller_userID INTEGER NOT NULL,
	buyer_userID INTEGER NOT NULL,
	timestamp TIMESTAMP NOT NULL,
	itemID INTEGER NOT NULL,
	itemCt UNSIGNED INTEGER NOT NULL,
	carrier_trackingNum VARCHAR(255),
	salePrice DECIMAL(6,2) NOT NULL,
	PRIMARY KEY(seller_userID, buyer_userID, itemID, timestamp)
	);
	
CREATE TABLE Reviews (
	itemID INTEGER NOT NULL,
	author_userID INTEGER NOT NULL,
	rating TINYINT NOT NULL, 
	CONSTRAINT star_rating CHECK (rating >= 0 AND rating <=5),
	content VARCHAR(2000) NOT NULL, 
	timestamp TIMESTAMP NOT NULL, 
	PRIMARY KEY (itemID, user), 
	FOREIGN KEY (itemID) REFERENCES Items (itemID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (author_userID) REFERENCES Users(userID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
	);
	
CREATE TABLE Sells (
	itemID INTEGER NOT NULL, 
	sellerID INTEGER NOT NULL,
	description VARCHAR(2000) NOT NULL, 
	price DECIMAL(6,2) NOT NULL,
	PRIMARY KEY(itemID, sellerID), 
	FOREIGN KEY(itemID) REFERENCES Items(itemID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(sellerID) REFERENCES Users(userID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	);
	
CREATE TABLE Items (
	itemID INTEGER AUTO_INCREMENT NOT NULL,
	name VARCHAR(255) NOT NULL,
	category VARCHAR(30) NOT NULL,
	PRIMARY KEY(itemID),
	FOREIGN KEY(category) REFERENCES Categories(name)
		ON UPDATE CASCADE,
	);
	
CREATE TABLE Categories (
	name VARCHAR(30) NOT NULL, 
	description VARCHAR(2000), 
	parent VARCHAR(30), 
	PRIMARY KEY(name), 
	FOREIGN KEY(parent) REFERENCES Categories (name) 
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT tree_constraint CHECK(name = "All" XOR parent NOT NULL)
	);
	
CREATE TABLE Auctions (
	auctioneerID INTEGER NOT NULL,
	itemID INTEGER NOT NULL,
	description VARCHAR(2000) NOT NULL,
	reserve_price DECIMAL(6,2) NOT NULL,
	start_time TIMESTAMP NOT NULL,
	end_time TIMESTAMP NOT NULL, 
	PRIMARY KEY(auctioneerID, start_time),
	FOREIGN KEY(auctioneerID) REFERENCES Users(userID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(itemID) REFERENCES Items(itemID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
	);
	
CREATE TABLE Bids (
	bidderID INTEGER NOT NULL,
	auctioneerID INTEGER NOT NULL,
	itemID INTEGER NOT NULL,
	auction_start TIMESTAMP NOT NULL,
	timestamp TIMESTAMP NOT NULL, 
	amount DECIMAL(6,2), 
	PRIMARY KEY (bidderID, auctioneerID, auction_start), 
	FOREIGN KEY (auctioneerID, auction_start) REFERENCES Auction(auctioneerID, start_time)
		ON DELETE CASCADE
		ON UPDATE CASCADE
	
	);
	
CREATE TABLE CreditCards (
	userID INTEGER NOT NULL,
	ccv INTEGER NOT NULL, 
	address_streeAddr VARCHAR(255) NOT NULL,
	address_city VARCHAR(255) NOT NULL,
	address_state CHAR(2) NOT NULL,
	address_zip CHAR(5) NOT NULL,
	address_zip_ext CHAR(4),
	merchant VARCHAR(20) NOT NULL, 
	ccNumber NUMBER(16,0) NOT NULL, 
	exp_date DATE, 
	PRIMARY KEY(ccID),
	FOREIGN KEY(userID) REFERENCES Users(userID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
	);